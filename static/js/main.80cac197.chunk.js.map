{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","Text","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80cac197.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: 'steelblue',\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import PropTypes from 'prop-types';\nimport Button from './Button';\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button\n        color={showAdd ? 'red' : 'green'}\n        text={showAdd ? 'Close' : 'Add'}\n        onClick={onAdd}\n      />\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import { FaTimes } from 'react-icons/fa';\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? 'reminder' : ''}`}\n      onDoubleClick={() => onToggle(task.id)}\n    >\n      <h3>\n        {task.text}{' '}\n        <FaTimes\n          style={{ color: 'red', cursor: 'pointer' }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task';\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task, index) => (\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\n      ))}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from 'react';\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('');\n  const [day, setDay] = useState('');\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!Text) {\n      alert('Please add a task');\n      return;\n    }\n\n    onAdd({ text, day, reminder });\n\n    setText('');\n    setDay('');\n    setReminder(false);\n  };\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label>Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label>Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label>Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n\n    return data;\n  };\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1;\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        'No Tasks To Show'\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}